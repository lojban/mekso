# $Id$

##  expressions and operators
proto 'term:'     is precedence('=')     is parsed(&term)      { ... }

## multiplicative operators
proto infix:<pi'i>   is looser(term:)       is pirop('mul')     { ... }
proto infix:<fe'i>   is equiv(infix:<pi'i>)    is pirop('div')     { ... }

## additive operators
proto infix:<su'i>   is looser(infix:<pi'i>)   is pirop('add')     { ... }
proto infix:<vu'u>   is equiv(infix:<su'i>)    is pirop('sub')     { ... }

