# $Id$

=begin overview

This is the grammar for mekso written as a sequence of Perl 6 rules.

=end overview

grammar mekso::Grammar is PCT::Grammar;

rule TOP {
    <bridi>*
    [ $ || <panic: 'Syntax error'> ]
    {*}
}

token ws {
    <!ww>
    [ \s+ ]*
}

rule bridi {
    | <sumti>+ <selbri> <sumti>* {*}    #= non-observative
    | <selbri> <sumti>* {*}             #= observative
}

rule selbri {
    <brivla>
}

rule sumti {
    'li' <mekso> {*}    #= li
}

rule brivla {
    'cusku'         #= cusku
}

rule mekso {
    | <namcu> {*}
    | <operation> {*}
}

rule operation {
    | <operator=unaryoperator> <term> {*}           #= unary
    | <term> <operator=binaryoperator> <term> {*}   #= binary
    | <term> <operator=naryoperator> <term> {*}     #= nary
    | <operator=binaryoperator> <term> <term> {*}   #= binary
    | <operator=trinaryoperator> <term> ** 3 {*}    #= trinary
    | <operator=naryoperator> <term> <term>+ {*}    #= nary
}

token unaryoperator { 'fa\'i' }

token binaryoperator { 'te\'a' }

token trinaryoperator { 'gei' }

token naryoperator { 'su\'i' | 'vu\'u' | 'fe\'i' | 'pi\'i' }

rule value {
    | <namcu> {*}                              #= namcu
}

token namcu { <prefixsign>? <PA> ** [\s*] 'boi'? {*} }

token PA { no | pa | re | ci | vo | mu | xa | ze | bi | so }

token prefixsign { 'ma\'u' | 'ni\'u' }

##  terms
token term {
    | <value> {*}                                #= value
}

rule expression is optable { ... }

